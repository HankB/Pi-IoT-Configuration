---

# (cloned from configure_BMP280.yml)
# Perform actions required to read and publish temperatures from a AHT20
# sensor including
# * enable i2c for GPIO
# * copy pre-compiled binary that reads the values
# * create a cron job to run the program and publish using mosquitto_pub
# 
# required ENV vars
#
# location - Used in the MQTT topic
# measurement - Used to ID the thing measured (in topic)
# interval - interval im minutes to invoke the script (in cron)
#
# Topic will be "HA/$(hostname)/{{location}}/{{measurement}}"
# Broker will be 'mqtt'.
#
# Playbook assumes that https://github.com/HankB/aht20
# has been cloned to /home/hbarta/Programming/aht20 and executable
# has been built in .../aht20/project/raspberrypi4b and the executable
# .../aht20/project/raspberrypi4b/build/aht20-reader has been built.

- name: Copy aht20-reader to destination
  ansible.builtin.copy:
    src: /home/hbarta/Programming/aht20/project/raspberrypi4b/build/aht20-reader
    dest: /usr/local/bin/aht20-reader
    owner: hbarta
    group: hbarta
    mode: u=rx,g=rx,o=rx

- name: Create ~/Downloads directory if it does not exist
  ansible.builtin.file:
    path: /home/hbarta/Downloads
    state: directory
    mode: '0755'

- name: fetch wiringpi deb
  ansible.builtin.get_url:
    url: https://github.com/WiringPi/WiringPi/releases/download/3.2/wiringpi_3.2_armhf.deb
    dest: /home/hbarta/Downloads/

- name: install wiringpi
  apt:
    deb: /home/hbarta/Downloads/wiringpi_3.2_armhf.deb
  
- name: enable i2c interface
  shell: raspi-config nonint do_i2c 0

- name: Add a cron job to run this
  become: false # SSH user
  cron:
    name: run aht20 publisher
    minute: "*/{{interval}}"
    job: > 
      /usr/local/bin/aht20-reader 2>>/tmp/aht20_temp_humidity.txt | 
      /bin/mosquitto_pub -s -t HA/$(/bin/hostname)/{{ location }}/{{ measurement }} 
      -h mqtt>>/tmp/aht20_temp_humidity_cron.txt 2>&1
